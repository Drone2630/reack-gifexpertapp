{"version":3,"sources":["componentes/AddCategory.js","helpers/getGifs.js","componentes/GifGridItem.js","componentes/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,oCACI,0BAAMC,SAXO,SAACC,GAClBA,EAAMC,iBACHJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAOV,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAhBxB,SAACP,GACvBF,EAAcE,EAAMQ,OAAOF,a,uBCRtBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OADAc,QAAQC,IAAI,CAACN,KAAIC,QAAOV,QAEpB,yBAAKgB,UAAU,4DACP,yBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,2BAAIA,KCHPS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAY,IAAD,EACVd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAHuB,mBAC7BC,EAD6B,KACtBC,EADsB,KAmBpC,OAbAC,qBAAU,WACN1B,EAAQC,GACH0B,MAAK,SAAAC,GAEFC,YAAW,WACPJ,EAAS,CACLjB,KAAMoB,EACNL,SAAS,MAEd,UAEZ,CAACtB,IAEGuB,EDhBwBM,CAAa7B,GAAhCa,EAFuB,EAE5BN,KAAae,EAFe,EAEfA,QAEpB,OACI,oCACA,wBAAIJ,UAAU,uDAAuDlB,GACpEsB,GAAW,yCACV,yBAAKJ,UAAU,aAELL,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eAAaoB,IAAKpB,EAAIC,GAAID,IAAKA,GAASA,UEXnDqB,EAAe,WAAO,IAAD,EACM7C,mBAAS,CAAC,cADhB,mBACvB8C,EADuB,KACX/C,EADW,KAG9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ+C,EAAWvB,KAAI,SAAAT,GACf,OAAO,kBAAC,EAAD,CAASA,SAAUA,EAAU8B,IAAK9B,UCX7DiC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.6fb5f617.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const handleInputChange = (event) => {\r\n        setInputValue(event.target.value);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"text\" value={inputValue} onChange={handleInputChange}/>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=nJv53BqbbFzvR9qp5YVExj66D5S3EWMJ`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    console.log({id, title, url});\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__delay-2s\">\r\n                <img src={url} alt={title}/>\r\n                <p>{title}</p>\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__bounce animate__delay-2s\">{category}</h3>\r\n        {loading && <p>Loading...</p>}\r\n        { <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem key={img.id} img={img} {...img}/>\r\n                    ))\r\n                }\r\n        </div> \r\n        }\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category)=>{\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n                }, 3000);  \r\n            })\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './componentes/AddCategory';\r\nimport { GifGrid } from './componentes/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState([\"one punch\"]);\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map(category => {\r\n                    return <GifGrid category={category} key={category}/>    \r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render( \n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}